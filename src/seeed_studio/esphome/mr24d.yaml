substitutions:
  device_id: test-mmwave-mr24d
  device_name: Test mmWave MR24D

esphome:
  name: ${device_id}
  friendly_name: ${device_name}
  includes:
    - header/mrx_definitions.h
    - header/mrx_frame.h
    - header/mr24d.h

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
  logs:
    sensor: INFO

api:
  encryption:
    key: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  port: 80
  version: 2
  include_internal: true

http_request:
  useragent: esphome/${device_id}
  timeout: 2s
  
uart:
  id: soft_uart_1
  baud_rate:  9600
  rx_pin: 16
  tx_pin: 17

sensor:
  - platform: custom
    lambda: |-
      auto mr24d_sensor = new UARTSensor(id(soft_uart_1)); 
      App.register_component(mr24d_sensor);
      return {mr24d_sensor->presence_sensor, mr24d_sensor->motion_sensor, mr24d_sensor->proximity_sensor, mr24d_sensor->body_sensor};
    sensors:
      - id: presence_sensor
        name: "Internal Presense Sensor"
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: presence_template
              state: !lambda return x > 0;
      - id: motion_sensor
        name: "Internal Motion Sensor"
        internal: true
        on_value:
          - binary_sensor.template.publish:
              id: motion_template
              state: !lambda return x > 0;
      - id: proximity_sensor
        name: "Proximity"
        state_class: measurement   
      - id: body_sensor
        name: "Body Movement"
        state_class: measurement   
        
binary_sensor:
  - id: presence_template
    platform: template
    name: "Presence"
    device_class: occupancy
  - id: motion_template
    platform: template
    name: "Motion"
    device_class: motion